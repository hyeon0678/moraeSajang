<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.morae.groupbuy.dao.GroupBuyDao">
<!-- 글 저장 -->
<insert id="gbRegister" parameterType="kr.co.morae.groupbuy.dto.GroupBuyDto" useGeneratedKeys="true"
        keyProperty="gbNo" keyColumn="gbNo">
INSERT INTO groupBuyingPost (userId,categoryNo,gbContent,title,recruitPeople,finishDate,startDate,joinPrice,gbState,blockState) 
VALUES (#{userId},(
SELECT categoryNo
FROM category
WHERE categoryType = #{categoryType}
),#{gbContent},#{title},#{recruitPeople},#{finishDate},#{startDate},#{joinPrice},#{gbState},'N');
</insert>

<!-- 이미지 저장 -->
<insert id="gbSavePhoto" parameterType="String">
INSERT INTO groupBuyingImage (gbNo, newName)
VALUES (#{param1}, #{param2});
</insert>

<!-- 지역 저장 -->
<insert id="gbRegionRegister" parameterType="kr.co.morae.groupbuy.dto.GroupBuyDto">
INSERT INTO groupbuyingregions (gbNo, parcelAddress, gbDetailAddress, place)
VALUES(#{gbNo}, #{parcelAddress}, #{gbDetailAddress}, #{place});
</insert>

<!-- 글 상세정보 가져오기 -->
<select id="getGbDetail" resultType="kr.co.morae.groupbuy.dto.GroupBuyDto">
SELECT gb.gbNo, gb.gbContent,gb.recruitPeople, gb.title, gb.finishDate, gb.startDate, gb.joinPrice, gb.gbState, loc.place, loc.gbDetailAddress,
    c.categoryType, gb.userId,
    (SELECT nickname
     FROM user u
	WHERE u.userid = gb.userId   
    )nickname,
    (SELECT count(userId) 
     FROM groupBuyingJoining 
     WHERE groupBuyingJoining.gbNo = gb.gbNo) joinPeople,  
    (SELECT count(reviewNo)
     FROM userreview u2 
     WHERE u2.userId = 'gb.userId' and u2.reviewNo = 1
    ) tradeAgain,
    (SELECT COUNT(reviewNo)
     FROM userreview u2 
     WHERE u2.userId = 'gb.userId' and u2.reviewNo = 2
    ) justOkay, 
    (SELECT count(reviewNo)
     FROM userreview u2 
     WHERE u2.userId = 'gb.userId' and u2.reviewNo = 3
    ) notInterested,
    (SELECT count(g.userId)
     FROM groupBuyingJoining g
     WHERE g.userId = #{param2} and g.gbNo =#{param1}
    ) isJoining
FROM 
    groupBuyingPost gb 
    LEFT OUTER JOIN groupbuyingregions loc on gb.gbNo = loc.gbNo
    LEFT OUTER JOIN category c on gb.categoryNo=c.categoryNo 
WHERE gb.gbNo = #{param1};
</select>


<!-- 사진 이름 가져오기 -->
<select id="getPhotoNames" parameterType="int" resultType="String">
SELECT newName
FROM groupbuyingimage 
WHERE gbNo = #{param1}

</select>

<select id="isgbJoining" resultType="hashMap" >
SELECT recruitPeople, userId ,
(SELECT count(userId)
FROM groupbuyingjoining g2 
WHERE g2.gbNo =#{param1})joinPeople,
(SELECT count(userId)
FROM groupbuyingjoining g2 
WHERE g2.gbNo =#{param1} AND g2.userId = #{param2}) isgbJoining
FROM groupbuyingpost
WHERE gbNo = #{param1};
</select>

<!-- 공구 참여 -->
<insert id="gbJoin">
insert into groupbuyingjoining (gbNo, userId, joinDate, joinState)
values (#{param1}, #{param2}, curDate(),'Y');
</insert>

<!-- 공구 참여 포인트 차감 -->
<insert id="insertPoint">
insert into pointhistory (gbNo, userId, pointMonney, pointReason, pointDate)
values (#{param1}, #{param2}, #{param3}, #{param4}, curdate());
</insert>

<!-- 공구글 상태 변경 -->
<update id="modifyGbState">
UPDATE groupBuyingPost
SET gbState=#{param2}
WHERE gbNo=#{param1};
</update>


<!-- 신고 -->
<insert id="report" parameterType="hashmap">
insert into report (userId, reportContent, reportRegDate, reportType, uniqueNo, processState)
<if test="commNo == -1">
values (#{userId}, #{reportContent}, curdate(), '글', #{gbNo}, '미처리');
</if>
<if test="commNo != -1">
values (#{userId}, #{reportContent}, curdate(), '댓글', #{commNo}, '미처리');
</if>
</insert>

<select id="getGbList" resultType="kr.co.morae.groupbuy.dto.GroupBuyDto" parameterType="kr.co.morae.groupbuy.dto.SearchOptionDto">
SELECT gb.gbNo, gb.recruitPeople, gb.title, gb.finishDate, gb.startDate, gb.joinPrice,
    c.categoryType, gb.userId,
    (SELECT nickname
     FROM user u
	WHERE u.userid = gb.userId   
    )nickname,
    (SELECT count(userId) 
     FROM groupBuyingJoining 
     WHERE groupBuyingJoining.gbNo = gb.gbNo) joinPeople,
     (SELECT g2.newName
     FROM groupbuyingimage g2
     WHERE g2.gbNo = gb.gbNo
     ORDER BY g2.imgNo
     LIMIT 1) newName 
FROM 
    groupBuyingPost gb 
    LEFT OUTER join groupbuyingregions loc ON gb.gbNo = loc.gbNo
    LEFT OUTER join category c ON gb.categoryNo=c.categoryNo
    
    <where>
    	<if test="region == null">
	        AND gb.blockState = 'N'
	    </if>
    	<if test="region != null">
	        AND loc.gbDetailAddr=#{region} AND gb.blockState = 'N'
	    </if>
	    <if test="category != null">
	        AND c.categoryNo=#{category}
	    </if>
	    <if test="keyWord != null">
	        AND gb.title LIKE CONCAT('%',#{keyWord},'%')
	    </if>
  </where>
   LIMIT 8 OFFSET #{offset}
</select> 


</mapper>